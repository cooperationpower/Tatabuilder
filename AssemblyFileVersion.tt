<#@ template language="C#" hostSpecific="True"#>
<#@ output extension="cs" #>
<#@ import namespace="System.IO" #>
<#
    int major = 0; 
    int minor = 0; 
    int build = 0; 
    int revision = 0; 
    try
    {
        //If we cannot find the file, the revision number is set to zero,
        //so even if the file doesn't exists the generation will run anyway.
        //NOTE: we suppose we're not messing with the generated file
        using(var f = File.OpenText(Host.ResolvePath("AssemblyFileVersion.cs")))
        {
            string maj = f.ReadLine().Replace("//","");
            string min = f.ReadLine().Replace("//","");
            string b = f.ReadLine().Replace("//","");
            string r = f.ReadLine().Replace("//","");
  
            major = int.Parse(maj); 
            minor = int.Parse(min); 
            build = int.Parse(b) + 1; 
            revision = int.Parse(r); 
        }
    }
    catch
    {
        major = 1; 
        minor = 0; 
        build = 0; 
        revision = 0; 
    }
#>
//<#= major #>
//<#= minor #>
//<#= build #>
//<#= revision #>
// 
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// 
  
using System.Reflection;
  
[assembly: AssemblyFileVersion("<#= major #>.<#= minor #>.<#= build #>.<#= revision #>")]